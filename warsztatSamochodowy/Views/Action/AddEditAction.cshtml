@using warsztatSamochodowy.Models;
<div style="color: transparent;">
    @Model FormAddEditAction
</div>
@using System.Net.Http

<!doctype html>
<html lang="en">
<head>
    <!-- Required meta tags -->
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1">

    <link href="/css/ShowPorposal.css" rel="stylesheet" />
    <link href="/css/AddProposal.css" rel="stylesheet" />
    <link href="/css/ManagerZlecenia.css" rel="stylesheet" />
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css">
    <link rel="stylesheet" href="https://use.fontawesome.com/releases/v5.15.4/css/all.css" integrity="sha384-DyZ88mC6Up2uqS4h/KRgHuoeGwBcD4Ng9SiP4dIRy0EXTlnuz47vAwmeGwVChigm" crossorigin="anonymous">

    <script src="~/lib/bootstrap/dist/js/bootstrap.min.js"></script>
    <!--<script src="~/lib/jquery/dist/jquery.min.js"></script>-->
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>
    <script src="/js/site.js"></script>
    <script src="https://kit.fontawesome.com/b99e675b6e.js"></script>
    <script src="/js/ManagerPojazdy.js"></script>

    <script src="http://code.jquery.com/jquery.min.js"></script>
    <script src="/js/SelectFilter.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.14.7/umd/popper.min.js"></script>
    <script src="~/lib/bootstrap/dist/js/bootstrap.min.js"></script>
</head>

<body>
    <div class="element">
        <h1>Akcja w zleceniu o nazwie: @Model[0].proposal.VehicleId  @Model[0].proposal.StartDate</h1>
    </div>
    @{
        if (Model[0].is_editable)
        {
            <div class="element">
                <h1>Nazwa akcji: @Model[0].action.ActionType.Name</h1>
            </div>
        }
    }

<form id="addEditActionForm">
    <div class="element-add">


        @if (Model[0].currentUser.RoleId == "MAN")
        {
            <h1>Typ akcji: </h1>
            <div class="dropdown">
                <select class="form-control typeDropdown SelectFilter mdb-select md-form dropdown formElementAddAction" name="type" value="" searchable="Search here.." id="type">
                    @{
                        if (Model[0].is_editable)
                        {
                            <option value="-1" disabled>wybierz typ akcji</option>
                        }
                        else
                        {
                            <option value="-1" disabled selected>wybierz typ akcji</option>
                        }

                        foreach (var type in Model[0].types)
                        {
                            if (Model[0].is_editable && Model[0].action.ActionType.CodeAction == type.CodeAction)
                            {
                                <option value="@type.CodeAction" selected>@type.Name</option>
                            }
                            else
                            {
                                <option value="@type.CodeAction">@type.Name</option>
                            }
                        }
                    }
                </select>

            </div>
        }
        else
        {
            <h1>Typ akcji: @Model[0].action.ActionType.CodeAction</h1>
        }

         <input hidden name="isEdit" value="@Model[0].is_editable.ToString().ToLower()" />
            <input hidden name="proposalId" value="@Model[0].proposal.Id" />
            <input hidden name="actionId" value="@Model[0].action.Id" />
            <button asp-controller="Action" asp-action="addActionType" method="get" class="btn add-button" type="submit" style="margin-left:30px"> <i class="fas fa-plus" style="color: black"></i></button>

    </div>
    <div class="element-add">

        @if (Model[0].currentUser.RoleId == "MAN")
        {
            <h1>Pracownik: </h1>
            <div class="dropdown">
                <select class="form-control workerDropdown SelectFilter mdb-select md-form dropdown formElementAddAction" name="worker" value="" searchable="Search here.." id="worker">
                    @{
                        if (Model[0].is_editable)
                        {
                            <option value="-1" disabled>przypisz pracownika</option>
                        }
                        else
                        {
                            <option value="-1" disabled selected>przypisz pracownika</option>
                        }

                        foreach (var worker in Model[0].workers)
                        {
                            if (Model[0].is_editable && Model[0].action.WorkerId == worker.Id)
                            {
                                <option value="@worker.Id" selected>@worker.FirstName @worker.LastName</option>
                            }
                            else
                            {
                                <option value="@worker.Id">@worker.FirstName @worker.LastName</option>
                            }
                        }
                    }
                </select>

            </div>
        }
        else
        {
            <h1>Pracownik: @Model[0].currentUser.FirstName @Model[0].currentUser.LastName</h1>
        }


    </div>
    <div class="element-add">
        @{
            warsztatSamochodowy.Models.Action actionBefore = new warsztatSamochodowy.Models.Action();
            if (Model[0].is_editable && Model[0].action.SequenceNumber != null)
            {
                foreach (var act in Model[0].actions)
                {
                    if (act.Id == Model[0].action.SequenceNumber)
                    {
                        actionBefore = act;
                    }
                }
            }
        }

        @if (Model[0].currentUser.RoleId == "MAN")
        {
            <h1>Wykonaj po: </h1>
            <div class="dropdown">
                <select class="form-control sequenceDropdown SelectFilter mdb-select md-form dropdown" name="sequenceNumber" value="" searchable="Search here.." id="sequenceNumber">
                    @{
                        if (Model[0].is_editable && Model[0].action.SequenceNumber != null)
                        {
                            <option value="-1">wykonaj po</option>
                        }
                        else
                        {
                            <option value="-1" selected>wykonaj po</option>
                        }

                        foreach (var action in Model[0].actions)
                        {
                            if (Model[0].is_editable && actionBefore.Id != 0 && actionBefore.Id == action.Id)
                            {
                                <option value="@action.Id" selected>@action.Description</option>

                            }
                            else if (!Model[0].is_editable || Model[0].action.Id != action.Id)
                            {
                                string isOk = "true";
                                if (Model[0].is_editable)
                                {
                                    var url = "https://localhost:44323/Action/isSequenceNumberOk?sequenceNumber=" + action.Id + "&actionId=" + Model[0].action.Id;
                                    isOk = await httpRequest(url);
                                }
                                if (isOk == "true")
                                {
                                    <option value="@action.Id">@action.Description</option>
                                }
                                else
                                {
                                    <option value="@action.Id" disabled>@action.Description</option>
                                }
                            }
                        }
                    }
                </select>
            </div>
        }
        else
        {

            foreach (var act in Model[0].actions)
            {
                if (Model[0].action.SequenceNumber != null && act.Id == Model[0].action.SequenceNumber)
                {
                    actionBefore = act;
                    break;
                }
            }

            if (actionBefore.ActionType != null)
            {
                <h1 data-toggle="tooltip" data-placement="right" title="opis: @actionBefore.Description">Wykonaj po: @actionBefore.ActionType.CodeAction - @actionBefore.ActionType.Name</h1>
            }


        }

    </div>

    <div class="element-add">
        <h1>Data rozpoczęcia: @Model[0].action.StartDate</h1>
    </div>
    @if (Model[0].action.Status == StatusEnum.CANCELED || Model[0].action.Status == StatusEnum.FINAL)
    {
        <div class="element-add">
            <h1>Data zakończenia: @Model[0].action.EndDate</h1>
        </div>
    }

    <div class="element-add">
        <h1>Status: @Model[0].action.Status</h1>
    </div>

    <br />

    @if (Model[0].currentUser.RoleId == "WOR")
    {
        if (Model[0].action.Status != StatusEnum.PROCESSING || (actionBefore.ActionTypeId != null && actionBefore.Status != StatusEnum.CANCELED && actionBefore.Status != StatusEnum.FINAL))
        {
            <button asp-controller="Worker" asp-action="SetFinal" class="btn btn-green" type="submit" name="id" value="@Model[0].action.Id" disabled>Oznacz jako zakończoną</button>
            <div class="h6 alert-danger">Aby zakończyć akcję, akcja musi mieć status "trwająca" oraz akcja o wyższym priorytecie musi mieć status "zakończona" lub "anulowana".</div>
        }
        else
        {
            <button asp-controller="Worker" asp-action="SetFinal" class="btn btn-green" type="submit" name="id" value="@Model[0].action.Id">Oznacz jako zakończoną</button>
        }
    }
    else if (Model[0].currentUser.RoleId == "MAN")
    {
        if (Model[0].action.Status == StatusEnum.CANCELED)
        {
            if (actionBefore.Id == 0 || actionBefore.Status == StatusEnum.CANCELED || actionBefore.Status == StatusEnum.FINAL)
            {
                <button asp-controller="Action" asp-action="SetProcessingAgain" class="btn btn-yellow" type="submit" name="id" value="@Model[0].action.Id">Przywróć akcję</button>
            }
            else
            {
                <button asp-controller="Action" asp-action="SetProcessingAgain" class="btn btn-yellow" type="submit" name="id" value="@Model[0].action.Id" disabled>Przywróć akcję</button>
                <div class="h6 alert-danger">Aby zakończyć akcję, akcja o wyższym priorytecie musi mieć status "zakończona" lub "anulowana".</div>
            }
        }
        else if (Model[0].action.Status == StatusEnum.PROCESSING)
        {
            <button asp-controller="Action" asp-action="SetFinal" class="btn btn-green" type="submit" name="id" value="@Model[0].action.Id">Zakończ akcję</button>
            <br />
            <br />
            <button asp-controller="Action" asp-action="SetCancelled" class="btn btn-red" type="submit" name="id" value="@Model[0].action.Id">anuluj akcję</button>
        }
        else if (Model[0].action.Status == StatusEnum.FINAL)
        {
            if (actionBefore.Id == 0 || actionBefore.Status == StatusEnum.CANCELED || actionBefore.Status == StatusEnum.FINAL)
            {
                <button asp-controller="Action" asp-action="SetProcessingAgain" class="btn btn-yellow" type="submit" name="id" value="@Model[0].action.Id">Otwórz ponownie</button>
            }
            else
            {
                <button asp-controller="Action" asp-action="SetProcessingAgain" class="btn btn-yellow" type="submit" name="id" value="@Model[0].action.Id" disabled>Otwórz ponownie</button>
                <div class="h6 alert-danger">Aby zakończyć akcję, akcja o wyższym priorytecie musi mieć status "zakończona" lub "anulowana".</div>
            }
        }
        else if (Model[0].action.Status == StatusEnum.OPEN)
        {
            if (actionBefore.Id == 0 || actionBefore.Status == StatusEnum.CANCELED || actionBefore.Status == StatusEnum.FINAL)
            {
                <button asp-controller="Action" asp-action="SetProcessingAgain" class="btn btn-yellow" type="submit" name="id" value="@Model[0].action.Id">Rozpocznij</button>
            }
            else
            {
                <button asp-controller="Action" asp-action="SetProcessingAgain" class="btn btn-yellow" type="submit" name="id" value="@Model[0].action.Id" disabled>rozpocznij</button>
                <div class="h6 alert-danger">Aby zakończyć akcję, akcja o wyższym priorytecie musi mieć status "zakończona" lub "anulowana".</div>
            }
        }
    }







    <div class='my-row'>
        <div class='my-column'>
            <div class='element'>
                <h1>Opis: </h1>
            </div>
            <div class='proposal-card'>
                @{
                    if (!Model[0].is_editable)
                    {
                        <textarea rows="5" cols="58" class="formElement" id="description" name="description" value="domyślny opis" disabled>Wybierz klienta oraz pojazd, aby wpisać opis.</textarea>
                    }
                    else
                    {
                        <textarea rows="5" cols="58" class="formElement" id="description" name="description" value="@Model[0].action.Description">@Model[0].action.Description</textarea>
                    }
                }
            </div>
        </div>
        @{
            if (Model[0].action.Result != null)
            {
                <div class='my-column'>
                    <div class='element'>
                        <h1>Rezultat: </h1>
                    </div>
                    <div class='proposal-card'>
                        <textarea rows="5" cols="58" id="result" name="result" value="@Model[0].action.Result">@Model[0].action.Result</textarea>
                    </div>
                </div>
            }
            else if (Model[0].action.Status == StatusEnum.FINAL)
            {
                <div class='my-column'>
                    <div class='element'>
                        <h1>Rezultat: </h1>
                    </div>
                    <div class='proposal-card'>
                        <textarea rows="5" cols="58" id="result" name="result" value=""></textarea>
                    </div>
                </div>
            }
            else if (Model[0].is_editable)
            {
                <div class='my-column'>
                    <div class='element'>
                        <h1>Rezultat: </h1>
                    </div>
                    <div class='proposal-card'>
                        <textarea rows="5" cols="58" id="result" name="result" value="" disabled>Aby wpisać rezultat, ustaw stan zlecenia na "zakończone".</textarea>
                    </div>
                </div>
            }
        }
    </div>
    <br />
    <br />


    <div class="save-cancel">
        @{
            if (Model[0].is_editable)
            {
                <button asp-controller="Action" asp-action="UpdateActionInDb" method="get" class="btn save-button" id="saveButton" type="submit" name="actionId" value=@Model[0].action.Id>Zapisz</button>
            }
            else
            {
                <button asp-controller="Action" asp-action="AddActionToDb" method="get" class="btn save-button" id="saveButton" type="submit" name="proposalId" value=@Model[0].proposal.Id disabled>Zapisz</button>
            }
        }
        <button asp-controller="ShowProposal" asp-action="ShowProposal" method="get" class="btn cancel-button" id="cancelButton" type="submit" name="proposalId" value="@Model[0].proposal.Id">Anuluj</button>
    </div>
</form>

</body>

@{
    async Task<string> httpRequest(string url)
    {
        var uri = new Uri(url);

        var cookies = Context.Request.Cookies[".AspNetCore.Cookies"];

        HttpClientHandler handler = new HttpClientHandler();
        handler.CookieContainer = new System.Net.CookieContainer();
        handler.CookieContainer.Add(uri, new System.Net.Cookie(".AspNetCore.Cookies", cookies));

        var clinet = new HttpClient(handler);

        clinet.DefaultRequestHeaders.Add(".AspNetCore.Cookies", cookies);

        var response = await clinet.GetAsync(uri);
        string textResult = await response.Content.ReadAsStringAsync();

        return textResult;
    }

}

