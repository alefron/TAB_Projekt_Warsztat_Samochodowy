@model IEnumerable<warsztatSamochodowy.Models.Personel>

@{
    ViewData["Title"] = "Index";
}
@using System.Net.Http

<head>
    <!-- Required meta tags -->
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <link href="/css/ManagerZlecenia.css" rel="stylesheet" />
    <link href="/css/ManagerPojazdy.css" rel="stylesheet" />
    <script src="~/lib/bootstrap/dist/js/bootstrap.min.js"></script>
    <!--<script src="~/lib/jquery/dist/jquery.min.js"></script>-->
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css">
    <link rel="stylesheet" href="https://use.fontawesome.com/releases/v5.15.4/css/all.css" integrity="sha384-DyZ88mC6Up2uqS4h/KRgHuoeGwBcD4Ng9SiP4dIRy0EXTlnuz47vAwmeGwVChigm" crossorigin="anonymous">
    <script src="/js/site.js"></script>
    <script src="https://kit.fontawesome.com/b99e675b6e.js"></script>
    <script src="/js/ManagerPojazdy.js"></script>
    <link href="https://unpkg.com/bootstrap-table@1.18.3/dist/bootstrap-table.min.css" rel="stylesheet">
    <script src="https://unpkg.com/tableexport.jquery.plugin/tableExport.min.js"></script>
    <script src="https://unpkg.com/bootstrap-table@1.18.3/dist/bootstrap-table.min.js"></script>
    <script src="https://unpkg.com/bootstrap-table@1.18.3/dist/bootstrap-table-locale-all.min.js"></script>
    <script src="https://unpkg.com/bootstrap-table@1.18.3/dist/extensions/export/bootstrap-table-export.min.js"></script>
</head>


<div class="flex-center">
    <a type="submit" class="h2" asp-controller="Admin" asp-action="Index" style="text-decoration: none;">Pracownicy warsztatu</a>
</div>

<a class="btn btn-blue" asp-action="PersonelCreate">dodaj pracownika</a>

<div class="row d-flex justify-content-center">
    <div class="col-md-8">
        <div class="card-hover-shadow-2x mb-3 card">
            <div class="card-header">
                <div class="text-capitalize font-weight-normal">&nbsp;Lista pracowników</div>
            </div>
            <div class="scroll-area-sm">
                <perfect-scrollbar class="ps-show-limits">
                    <div style="position: static;" class="ps ps--active-y">
                        <div class="ps-content">
                            <ul class=" list-group list-group-flush">
                                @foreach (var item in Model)
                                {
                                    <li class="list-group-item">
                                        <div class="bg-warning"></div>
                                        <div class="p-0">
                                            <div class="row">
                                                <div class="klienci-header">
                                                    <div class='nazwa'>
                                                        <form asp-action="PersonelEdit" asp-controller="Admin" method="get">
                                                            <button type="submit" name="id" value="@item.Id" class="h5 a-anim nav-link btn-table">@item.FirstName @item.LastName</button>
                                                        </form>
                                                    </div>
                                                    <div class='email'>@item.Email</div>
                                                </div>
                                                <div class='controlls'>
                                                    @{
                                                        var url = "https://localhost:44323/Admin/getPersonelStatus?clientId=" + item.Id;
                                                        string textResult = await httpRequest(url);
                                                        bool status = textResult == "true" ? true : false;

                                                        if (status)
                                                        {
                                                            <span class="circle circle-yellow" data-toggle="tooltip" data-placement="right" title="z zadaniami"></span>
                                                            <button class="trash-button" data-toggle="tooltip" data-placement="right" title="Należy zakończyć wszystkie trwające naprawy tego pracownika, aby go usunąć." disabled>
                                                                <i class="fas fa-trash" style='font-size:24px;color:gray'></i>
                                                            </button>
                                                        }
                                                        else
                                                        {
                                                            <span class="circle circle-green" data-toggle="tooltip" data-placement="right" title="bez zadań"></span>
                                                            <button class='trash-button' data-toggle="modal" data-target="#deleteClientModal" type="button" value="@item.Id.ToString()">
                                                                <i class="fas fa-trash" style='font-size:24px;color:red'></i>
                                                            </button>
                                                        }
                                                    }
                                                </div>
                                            </div>
                                        </div>
                                    </li>
                                }
                            </ul>
                        </div>
                    </div>
                </perfect-scrollbar>
            </div>
        </div>
    </div>
</div>


<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.FirstName)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.LastName)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Role)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Email)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.PhoneNumber)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Address)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.FirstName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.LastName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Role.Name)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Email)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.PhoneNumber)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Address.FormatedAddress)
                </td>
                <td>
                    <a asp-action="PersonelEdit" asp-route-id="@item.Id">Edit</a> |
                    <a asp-action="PersonelDelete" asp-route-id="@item.Id">Delete</a>
                </td>
            </tr>
        }
    </tbody>
</table>

@{
    async Task<string> httpRequest(string url)
    {
        var uri = new Uri(url);

        var cookies = Context.Request.Cookies[".AspNetCore.Cookies"];

        HttpClientHandler handler = new HttpClientHandler();
        handler.CookieContainer = new System.Net.CookieContainer();
        handler.CookieContainer.Add(uri, new System.Net.Cookie(".AspNetCore.Cookies", cookies));

        var clinet = new HttpClient(handler);

        clinet.DefaultRequestHeaders.Add(".AspNetCore.Cookies", cookies);

        var response = await clinet.GetAsync(uri);
        string textResult = await response.Content.ReadAsStringAsync();

        return textResult;
    }

}
